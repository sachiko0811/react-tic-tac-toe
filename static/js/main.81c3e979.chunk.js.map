{"version":3,"sources":["Header.jsx","Main.jsx","App.js","index.js"],"names":["Header","className","React","Component","Button","styled","button","Main","props","onResetBtn","window","location","reload","toggleTurn","context","state","isCircleTurnNow","circleElement","crossElement","classList","remove","add","countNum","cells","Array","progress","document","querySelector","batsuElement","cellsElements","querySelectorAll","msgElement","e","index","target","getAttribute","this","char","innerText","handCount","data-key","onClick","onClickCell","App","ReactDOM","render","getElementById"],"mappings":"iPAiBeA,E,uKAZP,OACI,4BAAQC,UAAU,UAClB,wBAAIA,UAAU,SAAd,eACA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,SAAf,c,GAPKC,IAAMC,W,iMCE3B,IAAMC,E,MAASC,EAAOC,OAAV,KA2FGC,E,kDAjFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAcVC,WAAa,WACTC,OAAOC,SAASC,UAhBD,EAmBnBC,WAAa,WACT,IAAMC,EAAU,EAAKC,MACbC,EAAiDF,EAAjDE,gBAAiBC,EAAgCH,EAAhCG,cAAeC,EAAiBJ,EAAjBI,aACpCF,GACFC,EAAcE,UAAUC,OAAO,UAC/BF,EAAaC,UAAUE,IAAI,YAE3BH,EAAaC,UAAUC,OAAO,UAC9BH,EAAcE,UAAUE,IAAI,WAE9BP,EAAQE,iBAAmBA,GA1B/B,EAAKD,MAAQ,CACTO,SAAU,EACVC,MAAO,IAAIC,MAAM,GACjBC,UAAU,EACVT,iBAAiB,EACjBC,cAAeS,SAASC,cAAc,SACtCC,aAAcF,SAASC,cAAc,UACrCE,cAAeH,SAASI,iBAAiB,SACzCC,WAAYL,SAASC,cAAc,SAXpB,E,wDAgCPK,GACZ,IAAMC,EAAQD,EAAEE,OAAOC,aAAa,YAC9BrB,EAAUsB,KAAKrB,MACbC,EAAqCF,EAArCE,gBAAiBO,EAAoBT,EAApBS,MAAOE,EAAaX,EAAbW,SAChC,IAAIF,EAAMU,EAAM,IAAOR,EAAvB,CAGA,IAAMY,EAAOrB,EAAkB,SAAM,OACrCO,EAAMU,EAAM,GAAKI,EACjBL,EAAEE,OAAOI,UAAYD,EACrBvB,EAAQyB,e,+BAOJ,OACI,6BACA,+BACI,4BACI,wBAAItC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,cAChD,wBAAIzC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,cAChD,wBAAIzC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,eAEpD,4BACI,wBAAIzC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,cAChD,wBAAIzC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,cAChD,wBAAIzC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,eAEpD,4BACI,wBAAIzC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,cAChD,wBAAIzC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,cAChD,wBAAIzC,UAAU,OAAOuC,WAAS,IAAIC,QAASL,KAAKM,gBAIxD,yBAAKzC,UAAU,OACf,wBAAIA,UAAU,OAAd,eACA,kBAACG,EAAD,CAAQqC,QAASL,KAAK3B,YAAtB,iB,GAzEOP,IAAMC,WCEVwC,MAVf,WACE,OACE,yBAAK1C,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCFR2C,IAASC,OACP,oCACE,kBAAC,EAAD,OAEFnB,SAASoB,eAAe,W","file":"static/js/main.81c3e979.chunk.js","sourcesContent":["import React from 'react';\n// import ReactDom from 'react-dom';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header className=\"header\">\n            <h1 className=\"title\">Tic Tac Toe</h1>\n            <div className=\"marubatsu l-flex\">\n                <div className=\"maru active\">○</div>\n                <div className=\"batsu\">×</div>\n            </div>\n        </header>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n// import ReactDOM from 'react-dom';\n\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n    background-color: black;\n    color: white;\n    border: 0;\n    border-radius: 5px;\n    padding: 10px;\n    `\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n    this.state = {\n        countNum: 0,\n        cells: new Array(9),\n        progress: true,\n        isCircleTurnNow: true,\n        circleElement: document.querySelector('.maru'),\n        batsuElement: document.querySelector('.batsu'),\n        cellsElements: document.querySelectorAll('.cell'),\n        msgElement: document.querySelector('.msg')\n    }\n}\n\n    onResetBtn = () => {\n        window.location.reload();\n    }\n\n    toggleTurn = () => {\n        const context = this.state;\n        const { isCircleTurnNow, circleElement, crossElement } = context\n        if (isCircleTurnNow) {\n          circleElement.classList.remove('active')\n          crossElement.classList.add('active')\n        } else {\n          crossElement.classList.remove('active')\n          circleElement.classList.add('active')\n        }\n        context.isCircleTurnNow = !isCircleTurnNow\n      }    \n\n    onClickCell(e) {\n    const index = e.target.getAttribute('data-key')\n    const context = this.state;\n    const { isCircleTurnNow, cells, progress } = context\n    if (cells[index-1] || !progress) {\n      return\n    }\n    const char = isCircleTurnNow ? '○' : '×'\n    cells[index-1] = char\n    e.target.innerText = char\n    context.handCount++\n    // checkResult()\n    // toggleTurn()\n    }\n\n    render() {\n\n        return (\n            <div>\n            <table>\n                <tr>\n                    <td className=\"cell\" data-key=\"1\" onClick={this.onClickCell}></td>\n                    <td className=\"cell\" data-key=\"2\" onClick={this.onClickCell}></td>\n                    <td className=\"cell\" data-key=\"3\" onClick={this.onClickCell}></td>\n                </tr>\n                <tr>\n                    <td className=\"cell\" data-key=\"4\" onClick={this.onClickCell}></td>\n                    <td className=\"cell\" data-key=\"5\" onClick={this.onClickCell}></td>\n                    <td className=\"cell\" data-key=\"6\" onClick={this.onClickCell}></td>\n                </tr>\n                <tr>\n                    <td className=\"cell\" data-key=\"7\" onClick={this.onClickCell}></td>\n                    <td className=\"cell\" data-key=\"8\" onClick={this.onClickCell}></td>\n                    <td className=\"cell\" data-key=\"9\" onClick={this.onClickCell}></td>\n                </tr>\n            </table>\n\n            <div className=\"Btn\">\n            <h3 className=\"msg\">starting...</h3>\n            <Button onClick={this.onResetBtn}>RESTART</Button>\n            </div>\n            \n\n        </div>\n        )\n    }\n}\n\n\nexport default Main;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\n// import Footer from './Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header />\n        <Main />\n        {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n// import styled from 'styled-components';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}